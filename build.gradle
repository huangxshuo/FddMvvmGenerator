


plugins {
    id 'org.jetbrains.intellij' version '0.4.22'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}


group 'com.fdd.mvvmgenerator'
version '2.0-SNAPSHOT'


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    google()
    mavenCentral()
}



// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2019.3'
    plugins = ['java']
    plugins 'org.jetbrains.kotlin:1.3.72-release-IJ2019.3-1' //here
    intellij.updateSinceUntilBuild false
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/java/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])

    testCompile fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    testCompile fileTree(dir: "$StudioCompilePath/plugins/java/lib", include: ['*.jar'])
    testCompile fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
}

patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}

//指定编译的编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task verifySetup() {
    doLast {
        def ideaJar = "$StudioCompilePath/lib/idea.jar"
        if (!file(ideaJar).exists()) {
            throw new GradleException("$ideaJar not found, set StudioCompilePath in gradle.properties")
        }
    }
}

compileJava.dependsOn verifySetup